-module(marvin_pdu_object_guild_unavailable_tests).

-include_lib("eunit/include/eunit.hrl").
-include("marvin_discord.hrl").
-include("marvin_pdu.hrl").
-include_lib("marvin_helper/include/marvin_specs_tests.hrl").


-spec ?test_spec(test).

%% automatically generated by eunit


-spec ?test_spec(t01_can_get_new_test).

t01_can_get_new_test() ->
    marvin_pdu_object_guild_unavailable:new(100).

-spec ?test_spec(t02_can_get_fields_from_opaque_test).

t02_can_get_fields_from_opaque_test() ->
    Object0 = marvin_pdu_object_guild_unavailable:new(100),
    ?assertEqual(100, marvin_pdu_object_guild_unavailable:id(Object0)).

-spec ?test_spec(t04_can_export_object_test).

t04_can_export_object_test() ->
    Object0 = marvin_pdu_object_guild_unavailable:new(100),
    ?assertMatch({ok, _Message}, marvin_pdu_object_guild_unavailable:export(Object0)).

-spec ?test_spec(t99_can_get_valid_parsed_test).

t99_can_get_valid_parsed_test() ->
    {ok, JSONBin} = file:read_file(
        code:priv_dir(marvin_pdu) ++ "/marvin_pdu_object_guild_unavailable_test.json"),
    Data = jiffy:decode(JSONBin, [return_maps]),
    Map = marvin_pdu_object_guild_unavailable:data_map(),
    ?assertMatch({[], _Result}, jiffy_vm:validate(Map, Data)).
